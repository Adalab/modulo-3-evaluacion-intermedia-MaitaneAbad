{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","data","clubs","setClubs","searchClubs","setSearchClubs","name","openOnWeekdays","openOnWeekend","newClub","setNewClub","handleNewCLub","ev","console","log","currentTarget","id","value","checked","handleDeleteClub","preventDefault","splice","htmlFor","onChange","target","filter","map","i","onClick","type","placeholder","ReactDOM","render","document","getElementById"],"mappings":"+NAyJeA,MArJf,WAEE,MAA0BC,mBAASC,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsCH,mBAAS,IAA/C,mBAAOI,EAAP,KAAoBC,EAApB,KACA,EAA8BL,mBAAS,CACrCM,KAAM,GACNC,gBAAgB,EAChBC,eAAe,IAHjB,mBAAOC,EAAP,KAAgBC,EAAhB,KAUMC,EAAgB,SAACC,GAErBC,QAAQC,IAAIF,EAAGG,cAAcC,IAC7BH,QAAQC,IAAIF,EAAGG,cAAcE,OAC7BJ,QAAQC,IAAIF,EAAGG,cAAcG,SAED,SAAxBN,EAAGG,cAAcC,GACnBN,EAAW,2BACND,GADK,IAERH,KAAMM,EAAGG,cAAcE,SAEQ,SAAxBL,EAAGG,cAAcC,GAC1BN,EAAW,2BACND,GADK,IAERF,eAAgBK,EAAGG,cAAcG,WAEF,aAAxBN,EAAGG,cAAcC,IAC1BN,EAAW,2BACND,GADK,IAERD,cAAeI,EAAGG,cAAcG,YAiBhCC,EAAmB,SAACP,GAExBA,EAAGQ,iBACH,IAAMJ,EAAKJ,EAAGG,cAAcC,GAC5Bd,EAAMmB,OAAOL,EAAI,GACjBb,EAAS,YAAID,KA2Cf,OACE,gCACE,mCACE,2CAEA,iCACE,uBAAOoB,QAAQ,SAAf,qBACA,yBAAQL,MAAOb,EAAamB,SA/FX,SAACX,GAExBP,EAAeO,EAAGY,OAAOP,QA6FnB,UACE,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,wCACA,wBAAQA,MAAM,UAAd,kDAGJ,uBACA,6BApDFf,EAEGuB,QAAO,SAACvB,GACP,MAAoB,SAAhBE,IAC8B,IAAzBF,EAAMK,kBAKhBkB,QAAO,SAACvB,GACP,MAAoB,YAAhBE,IAC6B,IAAxBF,EAAMM,iBAKhBkB,KAAI,SAACxB,EAAOyB,GACX,OACE,qBAAYX,GAAIW,EAAhB,UACE,8BACE,6CACC,GAAKzB,EAAMI,QAEd,8BACE,0DACCJ,EAAMK,eAAiB,MAAQ,SAElC,8BACE,8DACCL,EAAMM,cAAgB,KAAO,QAGhC,wBAAQoB,QAAST,EAAjB,iBAdOQ,WAoCf,+BACE,iCACE,uBAAOL,QAAQ,OAAf,6BACA,uBACEO,KAAK,OACLvB,KAAK,OACLU,GAAG,OACHc,YAAY,mBACZP,SAAUZ,EACVM,MAAOR,EAAQH,OAEjB,uBAAOgB,QAAQ,OAAf,oCACA,uBACEO,KAAK,WACLvB,KAAK,OACLU,GAAG,OACHO,SAAUZ,EACVO,QAAST,EAAQF,iBAEnB,uBAAOe,QAAQ,WAAf,2CACA,uBACEO,KAAK,WACLvB,KAAK,WACLU,GAAG,WACHO,SAAUZ,EACVO,QAAST,EAAQD,gBAGnB,uBAAOqB,KAAK,SAASZ,MAAM,YAASW,QAxGtB,SAAChB,GAErBA,EAAGQ,iBACkB,KAAjBX,EAAQH,MACVH,EAAS,GAAD,mBAAKD,GAAL,CAAYO,KAEtBC,EAAW,CACTJ,KAAM,GACNC,gBAAgB,EAChBC,eAAe,gBC/CrBuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.12cc319a.chunk.js","sourcesContent":["import '../styles/App.scss';\nimport data from './data.json';\nimport { useState } from 'react';\n\nfunction App() {\n  // constantes de estado\n  const [clubs, setClubs] = useState(data);\n  const [searchClubs, setSearchClubs] = useState('');\n  const [newClub, setNewClub] = useState({\n    name: '',\n    openOnWeekdays: false,\n    openOnWeekend: false,\n  });\n\n  const handleSearchClub = (ev) => {\n    // Para el filtro de busqueda\n    setSearchClubs(ev.target.value);\n  };\n  const handleNewCLub = (ev) => {\n    // Los elementos para que me los pinte en el objeto\n    console.log(ev.currentTarget.id);\n    console.log(ev.currentTarget.value);\n    console.log(ev.currentTarget.checked);\n\n    if (ev.currentTarget.id === 'name') {\n      setNewClub({\n        ...newClub,\n        name: ev.currentTarget.value,\n      });\n    } else if (ev.currentTarget.id === 'week') {\n      setNewClub({\n        ...newClub,\n        openOnWeekdays: ev.currentTarget.checked,\n      });\n    } else if (ev.currentTarget.id === 'weekends') {\n      setNewClub({\n        ...newClub,\n        openOnWeekend: ev.currentTarget.checked,\n      });\n    }\n  };\n\n  const handleNewClub = (ev) => {\n    //Añado un nuevo Club(objeto) al array de los clubs ya hechos\n    ev.preventDefault();\n    if (newClub.name !== '') {\n      setClubs([...clubs, newClub]);\n    }\n    setNewClub({\n      name: '',\n      openOnWeekdays: false,\n      openOnWeekend: false,\n    });\n  };\n  const handleDeleteClub = (ev) => {\n    // esta funcion necesitamos saber SIEMPRE EL ID, luego cogemos el array principal y le borramos el clickado y 1 solo ( id,1) para que no nos borre más elementos y después volvemos a actualizar el estado para que lo muestre en el HTML\n    ev.preventDefault();\n    const id = ev.currentTarget.id;\n    clubs.splice(id, 1);\n    setClubs([...clubs]);\n    // If click borrame ese objeto del array\n  };\n  const renderClubs = () => {\n    return (\n      clubs\n        // filtrame todos || filtrame solo los que abren entre semana || filtrame solo los que abren los fines de semana\n        .filter((clubs) => {\n          if (searchClubs === 'week') {\n            return clubs.openOnWeekdays === true;\n          } else {\n            return true;\n          }\n        })\n        .filter((clubs) => {\n          if (searchClubs === 'weekend') {\n            return clubs.openOnWeekend === true;\n          } else {\n            return true;\n          }\n        })\n        .map((clubs, i) => {\n          return (\n            <li key={i} id={i}>\n              <p>\n                <label>Nombre: </label>\n                {'' + clubs.name}\n              </p>\n              <p>\n                <label>Abierto entre semana:</label>\n                {clubs.openOnWeekdays ? ' Si' : ' No'}\n              </p>\n              <p>\n                <label>Abierto el fin de semana:</label>\n                {clubs.openOnWeekend ? 'Si' : 'No'}\n              </p>\n\n              <button onClick={handleDeleteClub}>X</button>\n            </li>\n          );\n        })\n    );\n  };\n  return (\n    <div>\n      <header>\n        <h1>Mis clubs</h1>\n\n        <form>\n          <label htmlFor='filter'>Mostrar</label>\n          <select value={searchClubs} onChange={handleSearchClub}>\n            <option value='other'>Todos</option>\n            <option value='week'>Los que abren entre semana</option>\n            <option value='weekend'>Los que abren en fin de semana</option>\n          </select>\n        </form>\n        <hr></hr>\n        <ul>{renderClubs()}</ul>\n      </header>\n      <main>\n        <form>\n          <label htmlFor='name'>Nombre del club</label>\n          <input\n            type='text'\n            name='name'\n            id='name'\n            placeholder=' Ej. Robótica'\n            onChange={handleNewCLub}\n            value={newClub.name}\n          />\n          <label htmlFor='week'>¿Abre entre semana?</label>\n          <input\n            type='checkbox'\n            name='week'\n            id='week'\n            onChange={handleNewCLub}\n            checked={newClub.openOnWeekdays}\n          />\n          <label htmlFor='weekends'>¿Abre los fines de semana?</label>\n          <input\n            type='checkbox'\n            name='weekends'\n            id='weekends'\n            onChange={handleNewCLub}\n            checked={newClub.openOnWeekend}\n          />\n\n          <input type='submit' value='Añadir' onClick={handleNewClub} />\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}